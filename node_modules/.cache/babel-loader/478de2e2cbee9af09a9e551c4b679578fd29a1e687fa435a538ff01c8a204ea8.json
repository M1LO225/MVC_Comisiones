{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\n// Importamos el servicio de aplicación\nimport { CommissionService } from '../../application/CommissionService';\n\n// Creamos una única instancia del servicio\nconst commissionService = new CommissionService();\nexport function useCommissionCalculator() {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [commissions, setCommissions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const calculate = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setCommissions([]); // Limpia resultados anteriores\n\n    try {\n      // 1. Llama al servicio de aplicación\n      const report = await commissionService.getCommissionReport(startDate, endDate);\n      setCommissions(report);\n    } catch (err) {\n      // 2. Muestra el error que vino del servicio\n      setError(err.message);\n      alert(err.message); // Mantenemos la alerta original\n    }\n    setIsLoading(false);\n  }, [startDate, endDate]); // Depende de las fechas\n\n  return {\n    startDate,\n    setStartDate,\n    endDate,\n    setEndDate,\n    commissions,\n    isLoading,\n    error,\n    calculate // La función para que el botón la llame\n  };\n}\n_s(useCommissionCalculator, \"ZVAN3E2wzZFU60pKfJb067H8Bs8=\");","map":{"version":3,"names":["useState","useCallback","CommissionService","commissionService","useCommissionCalculator","_s","startDate","setStartDate","endDate","setEndDate","commissions","setCommissions","isLoading","setIsLoading","error","setError","calculate","report","getCommissionReport","err","message","alert"],"sources":["C:/Users/Usuario/Desktop/Calculo de comisiones MVC/src/presentation/hooks/useCommissionCalculator.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n// Importamos el servicio de aplicación\r\nimport { CommissionService } from '../../application/CommissionService';\r\n\r\n// Creamos una única instancia del servicio\r\nconst commissionService = new CommissionService();\r\n\r\nexport function useCommissionCalculator() {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [commissions, setCommissions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const calculate = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCommissions([]); // Limpia resultados anteriores\r\n\r\n    try {\r\n      // 1. Llama al servicio de aplicación\r\n      const report = await commissionService.getCommissionReport(startDate, endDate);\r\n      setCommissions(report);\r\n    } catch (err) {\r\n      // 2. Muestra el error que vino del servicio\r\n      setError(err.message);\r\n      alert(err.message); // Mantenemos la alerta original\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, [startDate, endDate]); // Depende de las fechas\r\n\r\n  return {\r\n    startDate,\r\n    setStartDate,\r\n    endDate,\r\n    setEndDate,\r\n    commissions,\r\n    isLoading,\r\n    error,\r\n    calculate, // La función para que el botón la llame\r\n  };\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA,MAAMC,iBAAiB,GAAG,IAAID,iBAAiB,CAAC,CAAC;AAEjD,OAAO,SAASE,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,SAAS,GAAGf,WAAW,CAAC,YAAY;IACxCY,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACdJ,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEpB,IAAI;MACF;MACA,MAAMM,MAAM,GAAG,MAAMd,iBAAiB,CAACe,mBAAmB,CAACZ,SAAS,EAAEE,OAAO,CAAC;MAC9EG,cAAc,CAACM,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ;MACAJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;MACrBC,KAAK,CAACF,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;IACtB;IAEAP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACP,SAAS,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE1B,OAAO;IACLF,SAAS;IACTC,YAAY;IACZC,OAAO;IACPC,UAAU;IACVC,WAAW;IACXE,SAAS;IACTE,KAAK;IACLE,SAAS,CAAE;EACb,CAAC;AACH;AAACX,EAAA,CAnCeD,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}