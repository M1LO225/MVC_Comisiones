{"ast":null,"code":"const hardcodedSales = [{\n  id: 101,\n  fecha_venta: '2025-10-19',\n  monto: 1500,\n  vendedor_id: 1\n}, {\n  id: 102,\n  fecha_venta: '2025-10-20',\n  monto: 800,\n  vendedor_id: 1\n}, {\n  id: 103,\n  fecha_venta: '2025-10-21',\n  monto: 5500,\n  vendedor_id: 1\n}, {\n  id: 201,\n  fecha_venta: '2025-10-19',\n  monto: 6000,\n  vendedor_id: 2\n}, {\n  id: 202,\n  fecha_venta: '2025-10-20',\n  monto: 120,\n  vendedor_id: 2\n}, {\n  id: 301,\n  fecha_venta: '2025-10-21',\n  monto: 1100,\n  vendedor_id: 3\n}, {\n  id: 401,\n  fecha_venta: '2025-01-01',\n  monto: 1000,\n  vendedor_id: 1\n}];\nexport class SaleRepository {\n  /**\r\n   * \r\n   * @param {string} startDate \r\n   * @param {string} endDate \r\n   * @returns {Promise<Array>} \r\n   */\n  async getByDateRange(startDate, endDate) {\n    const start = new Date(startDate + 'T00:00:00');\n    const end = new Date(endDate + 'T00:00:00');\n    const filteredSales = hardcodedSales.filter(sale => {\n      const saleDate = new Date(sale.fecha_venta + 'T00:00:00');\n      return saleDate >= start && saleDate <= end;\n    });\n    return Promise.resolve(filteredSales);\n  }\n}","map":{"version":3,"names":["hardcodedSales","id","fecha_venta","monto","vendedor_id","SaleRepository","getByDateRange","startDate","endDate","start","Date","end","filteredSales","filter","sale","saleDate","Promise","resolve"],"sources":["C:/Users/Usuario/Desktop/Calculo de comisiones MVC/src/infrastructure/repositories/SaleRepository.js"],"sourcesContent":["const hardcodedSales = [\r\n\r\n  { id: 101, fecha_venta: '2025-10-19', monto: 1500, vendedor_id: 1 },\r\n  { id: 102, fecha_venta: '2025-10-20', monto: 800, vendedor_id: 1 },\r\n  { id: 103, fecha_venta: '2025-10-21', monto: 5500, vendedor_id: 1 },\r\n  \r\n\r\n  { id: 201, fecha_venta: '2025-10-19', monto: 6000, vendedor_id: 2 },\r\n  { id: 202, fecha_venta: '2025-10-20', monto: 120, vendedor_id: 2 },\r\n  \r\n\r\n  { id: 301, fecha_venta: '2025-10-21', monto: 1100, vendedor_id: 3 },\r\n  \r\n\r\n  { id: 401, fecha_venta: '2025-01-01', monto: 1000, vendedor_id: 1 },\r\n];\r\n\r\nexport class SaleRepository {\r\n  /**\r\n   * \r\n   * @param {string} startDate \r\n   * @param {string} endDate \r\n   * @returns {Promise<Array>} \r\n   */\r\n  async getByDateRange(startDate, endDate) {\r\n    const start = new Date(startDate + 'T00:00:00');\r\n    const end = new Date(endDate + 'T00:00:00');\r\n\r\n\r\n    const filteredSales = hardcodedSales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha_venta + 'T00:00:00');\r\n      return saleDate >= start && saleDate <= end;\r\n    });\r\n\r\n    return Promise.resolve(filteredSales);\r\n  }\r\n}"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CAErB;EAAEC,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAE,CAAC,EACnE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAClE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAE,CAAC,EAGnE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAE,CAAC,EACnE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAE,CAAC,EAGlE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAE,CAAC,EAGnE;EAAEH,EAAE,EAAE,GAAG;EAAEC,WAAW,EAAE,YAAY;EAAEC,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAE,CAAC,CACpE;AAED,OAAO,MAAMC,cAAc,CAAC;EAC1B;AACF;AACA;AACA;AACA;AACA;EACE,MAAMC,cAAcA,CAACC,SAAS,EAAEC,OAAO,EAAE;IACvC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,GAAG,WAAW,CAAC;IAC/C,MAAMI,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,GAAG,WAAW,CAAC;IAG3C,MAAMI,aAAa,GAAGZ,cAAc,CAACa,MAAM,CAACC,IAAI,IAAI;MAClD,MAAMC,QAAQ,GAAG,IAAIL,IAAI,CAACI,IAAI,CAACZ,WAAW,GAAG,WAAW,CAAC;MACzD,OAAOa,QAAQ,IAAIN,KAAK,IAAIM,QAAQ,IAAIJ,GAAG;IAC7C,CAAC,CAAC;IAEF,OAAOK,OAAO,CAACC,OAAO,CAACL,aAAa,CAAC;EACvC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}